package crud.console;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (CRUD) —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å.
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, –ø—Ä–æ—Å–º–æ—Ç—Ä, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
 */
public class CrudConsoleApp {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        List<String> items = new ArrayList<>();
        boolean isRunning = true;

        System.out.println("üì¶ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CRUD-–º–µ–Ω–µ–¥–∂–µ—Ä!");

        while (isRunning) {
            printMenu();
            String userChoice = scanner.nextLine().trim();

            switch (userChoice) {
                case "1" -> addItem(scanner, items);
                case "2" -> displayItems(items);
                case "3" -> updateItem(scanner, items);
                case "4" -> deleteItem(scanner, items);
                case "0" -> {
                    isRunning = false;
                    System.out.println("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.");
                }
                default -> System.out.println("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.");
            }
        }

        scanner.close();
    }

    private static void printMenu() {
        System.out.println("\n–ú–µ–Ω—é:");
        System.out.println("1 - ‚ûï –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç");
        System.out.println("2 - üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã");
        System.out.println("3 - ‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç");
        System.out.println("4 - üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç");
        System.out.println("0 - üö™ –í—ã—Ö–æ–¥");
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ");
    }

    private static void addItem(Scanner scanner, List<String> items) {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç: ");
        String item = scanner.nextLine();
        items.add(item);
        System.out.println("‚úÖ –≠–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω.");
    }

    private static void displayItems(List<String> items) {
        System.out.println("üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫:");
        if (items.isEmpty()) {
            System.out.println(" (—Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç)");
        } else {
            for (int i = 0; i < items.size(); i++) {
                System.out.println(" " + i + ": " + items.get(i));
            }
        }
    }

    private static void updateItem(Scanner scanner, List<String> items) {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ");
        int index = parseIndex(scanner);

        if (isValidIndex(index, items.size())) {
            System.out.print("–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç: ");
            String updatedItem = scanner.nextLine();
            items.set(index, updatedItem);
            System.out.println("‚ôªÔ∏è –≠–ª–µ–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω.");
        } else {
            System.out.println("‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∏–Ω–¥–µ–∫—Å.");
        }
    }

    private static void deleteItem(Scanner scanner, List<String> items) {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ");
        int index = parseIndex(scanner);

        if (isValidIndex(index, items.size())) {
            items.remove(index);
            System.out.println("üóëÔ∏è –≠–ª–µ–º–µ–Ω—Ç —É–¥–∞–ª—ë–Ω.");
        } else {
            System.out.println("‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∏–Ω–¥–µ–∫—Å.");
        }
    }

    private static int parseIndex(Scanner scanner) {
        try {
            return Integer.parseInt(scanner.nextLine().trim());
        } catch (NumberFormatException e) {
            return -1;
        }
    }

    private static boolean isValidIndex(int index, int size) {
        return index >= 0 && index < size;
    }
}